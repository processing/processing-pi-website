(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var Processingtheme = {};

Processingtheme._initToc = function () {
  var HEADERFIX = 30;
  var $toclink = $('.toc-link');
  var $headerlink = $('.headerlink');
  var $tocLinkLis = $('.post-toc-content li');
  var headerlinkTop = $.map($headerlink, function (link) {
    return $(link).offset().top;
  });
  var headerLinksOffsetForSearch = $.map(headerlinkTop, function (offset) {
    return offset - HEADERFIX;
  });

  var searchActiveTocIndex = function searchActiveTocIndex(array, target) {
    for (var i = 0; i < array.length - 1; i++) {
      if (target > array[i] && target <= array[i + 1]) return i;
    }

    if (target > array[array.length - 1]) return array.length - 1;
    return -1;
  };

  $(window).scroll(function () {
    var scrollTop = $(window).scrollTop();
    var activeTocIndex = searchActiveTocIndex(headerLinksOffsetForSearch, scrollTop);
    $($toclink).removeClass('active');
    $($tocLinkLis).removeClass('has-active');

    if (activeTocIndex !== -1) {
      $($toclink[activeTocIndex]).addClass('active');
      var ancestor = $toclink[activeTocIndex].parentNode;

      while (ancestor.tagName !== 'NAV') {
        $(ancestor).addClass('has-active');
        ancestor = ancestor.parentNode.parentNode;
      }
    }
  });
};

Processingtheme.toc = function () {
  var tocContainer = document.getElementById('post-toc');

  if (tocContainer !== null) {
    var toc = document.getElementById('TableOfContents');

    if (toc === null) {
      // toc = true, but there are no headings
      tocContainer.parentNode.removeChild(tocContainer);
    } else {
      this._refactorToc(toc);

      this._linkToc();

      this._initToc();
    }
  }
};

Processingtheme._refactorToc = function (toc) {
  // when headings do not start with `h1`
  var oldTocList = toc.children[0];
  var newTocList = oldTocList;
  var temp;

  while (newTocList.children.length === 1 && (temp = newTocList.children[0].children[0]).tagName === 'UL') {
    newTocList = temp;
  }

  if (newTocList !== oldTocList) toc.replaceChild(newTocList, oldTocList);
};

Processingtheme._linkToc = function () {
  var links = document.querySelectorAll('#TableOfContents a:first-child');

  for (var i = 0; i < links.length; i++) {
    links[i].className += ' toc-link';
  }

  for (var num = 1; num <= 6; num++) {
    var headers = document.querySelectorAll('.post-content>h' + num);

    for (var _i = 0; _i < headers.length; _i++) {
      var header = headers[_i];
      header.innerHTML = "<a href=\"#".concat(header.id, "\" class=\"headerlink\"></a>").concat(header.innerHTML);
    }
  }
};

$(document).ready(function () {
  Processingtheme.toc(); // clipboard

  var clipInit = false;
  $('pre code').each(function () {
    var code = $(this),
        _text = code.text();

    if (_text.length > 10) {
      if (!clipInit) {
        var _text,
            clip = new ClipboardJS('.copy-to-clipboard', {
          text: function text(trigger) {
            _text = $(trigger).prev('code').text();
            return _text.replace(/^\$\s/gm, '');
          }
        });

        var inPre;
        clip.on('success', function (e) {
          e.clearSelection();
          inPre = $(e.trigger).parent().prop('tagName') == 'PRE';
          $(e.trigger).attr('aria-label', 'Copied to clipboard!').addClass('tooltipped');
        });
        clip.on('error', function (e) {
          inPre = $(e.trigger).parent().prop('tagName') == 'PRE';
          $(e.trigger).attr('aria-label', fallbackMessage(e.action)).addClass('tooltipped tooltipped-' + (inPre ? 'w' : 's'));
        });
        clipInit = true;
      }

      code.after('<span class="copy-to-clipboard" title="Copy to clipboard" />');
      code.next('.copy-to-clipboard').on('mouseleave', function () {
        $(this).attr('aria-label', null).removeClass('tooltipped');
      });
    }
  });
});
hljs.initHighlightingOnLoad();

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
